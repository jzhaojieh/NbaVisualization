{
    "collab_server" : "",
    "contents" : "# set up\nlibrary(knitr)\nknitr::opts_chunk$set(echo = FALSE)\n\n### Initial Modeling ###\n\n# Data Summary\n# code from Colin Eubanks\nmobility = read.csv(\"mobility.csv\")\ndata.summary <- data.frame(Minimum = sapply(X = c(3,5), FUN = function(X) min(mobility[,X])),\n                           Mean = sapply(X = c(3,5), FUN = function(X) mean(mobility[,X])),\n                           Median = sapply(X = c(3,5), FUN = function(X) median(mobility[,X])),\n                           Maximum = sapply(X = c(3,5), FUN = function(X) max(mobility[,X])),\n                           Variance = sapply(X = c(3,5), FUN = function(X) var(mobility[,X])))\nrow.names(data.summary) <- c(\"Mobility\", \"Commute\")\nkable(data.summary, row.names = TRUE, digits = 4,\n      caption = \"Summary Statistics for Social Mobility Data Set\")\n\n# Histograms\npar(mfrow=c(2,2))\nhist(mobility$Mobility, xlab=\"Social Mobility\", breaks=75, main=\"\", pch=19, col = \"gold1\")\nhist(mobility$Commute, xlab = \"Fraction of Workers with Commute < 15 min\", breaks=75, main=\"\", pch=19, col = \"gold1\")\n\n#  Initial regression line and residual plots for data with and without outliers\nmobility = read.csv(\"mobility.csv\")\nlinmod = lm(mobility$Mobility~mobility$Commute)\nplot(mobility$Commute, mobility$Mobility, xlab=\"Fraction of Workers with Commute Time < 15 Min\", ylab=\"Social Mobility\", ylim = c(0,.5), xlim= c(0,1), pch=20, col = \"gold1\")\nabline(linmod)\npar(mfrow=c(2,2))\nplot(mobility$Commute, residuals(linmod), xlab = \"Commute\", ylab = \"Prediction Error (Mobility)\", pch=20, col = \"gold1\", ylim = c(-.2, .35))\nabline(a=0,b=0)\nmobility[c(which(mobility$Commute>.8 | mobility$Mobility>.4)),] <- NA\nmobility <- na.omit(mobility)\nlinmod = lm(mobility$Mobility~mobility$Commute)\nplot(mobility$Commute, residuals(linmod), xlab = \"Commute\", ylab = \"Prediction Error (Mobility)\", pch=20, col = \"gold1\", ylim = c(-.2, .35))\nabline(a=0,b=0)\n\n### Modeling and Diagnostics ###\n\n# Diagnostic Plots\npar(mfrow=c(2,2))\nplot(mobility$Commute, residuals(linmod), xlab = \"Commute\", ylab = \"Prediction Error (Mobility)\", pch=20, col = \"gold1\")\nabline(a=0,b=0)\nplot(mobility$Commute, residuals(linmod)^2, xlab = \"Commute\", ylab = \"Prediction Error (Mobility)\", pch=20, col = \"gold1\")\nabline(a=0,b=0)\nhist(residuals(linmod), breaks=75, freq=FALSE, xlab= \"Residuals\", ylab=\"Density\", main=\"\",pch=20, col = \"gold1\" )\ncurve(dnorm(x,mean=0,sd=sd(residuals(linmod))),add=TRUE)\nqqnorm(residuals(linmod), pch=20, col = \"gold1\")\nqqline(residuals(linmod))\n\n### Inference and Results ###\n\n# Estimates and CI Table\ndata.summary.2 <- data.frame(\n  Estimate = coefficients(linmod),\n  CI = confint(linmod))\nrow.names(data.summary.2) <- c(\"Intercept\", \"Slope\")\nkable(data.summary.2, row.names = TRUE, digits = 4,\n      caption = \"Confidence Intervals for Model Estimates\")\n\n# Confidence and Prediction Interval Plot\nsm = mobility$Mobility\nct = mobility$Commute\nlinmod = lm(sm~ct)\nplot(mobility$Commute, mobility$Mobility, ylim=c(0,.4), xlab=\"Commute Time\", ylab=\"Social Mobility\", pch=20, col= \"gold1\")\nabline(linmod)\nnewx <- seq(from=0,to=.8, length.out=100)\nconf_interval <- predict(linmod, newdata=data.frame(ct=newx), interval=\"confidence\",\n                         level = 0.95)\nlines(newx, conf_interval[,\"lwr\"], col=\"royalblue3\", lty=2)\nlines(newx, conf_interval[,\"upr\"], col=\"royalblue3\", lty=2)\n\npred_interval <- predict(linmod, newdata=data.frame(ct=newx), interval=\"prediction\",\n                         level = 0.95)\nlines(newx, pred_interval[,\"lwr\"], col=\"firebrick\", lty=2)\nlines(newx, pred_interval[,\"upr\"], col=\"firebrick\", lty=2)",
    "created" : 1520534117328.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3813630976",
    "id" : "2A87CA71",
    "lastKnownWriteTime" : 1507867565,
    "last_content_update" : 1507867565,
    "path" : "~/Documents/College/17/Fall/Regression/Exam 1/exam1_code.R",
    "project_path" : null,
    "properties" : {
    },
    "relative_order" : 10,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}